{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ofekg\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\Project-3\\\\frontend\\\\src\\\\components\\\\header\\\\header.tsx\";\nimport React, { Component } from 'react';\nimport './header.css';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Grid from '@material-ui/core/Grid';\nimport { NavLink } from 'react-router-dom';\nimport { UserModel } from '../../models/user-model'; //redux\n\nimport { store } from \"../../redux/store\";\nimport { ActionType } from \"../../redux/action-type\";\nimport Button from '@material-ui/core/Button';\nexport class Header extends Component {\n  constructor(props) {\n    super(props);\n    this.unsubscribeStore = void 0;\n\n    this.componentWillUnmount = () => {\n      this.unsubscribeStore();\n    };\n\n    this.componentDidMount = () => {\n      if (store.getState().user.userID === undefined) {\n        this.checkLogIn();\n      }\n    };\n\n    this.checkLogIn = () => {\n      const options = {\n        method: \"GET\",\n        headers: {\n          \"Authorization\": \"Bearer \" + localStorage.getItem('token')\n        }\n      }; // check JWT token\n\n      fetch(\"http://localhost:3001/api/login/login-check\", options).then(response => response.json()).then(res => {\n        if (res.name === 'JsonWebTokenError') {\n          const actionIsLogin = {\n            type: ActionType.updateIsLogin,\n            payload: false\n          };\n          store.dispatch(actionIsLogin);\n          return;\n        }\n\n        const actionUser = {\n          type: ActionType.getUser,\n          payload: res.user\n        };\n        store.dispatch(actionUser);\n        const actionIsLogin = {\n          type: ActionType.updateIsLogin,\n          payload: true\n        };\n        store.dispatch(actionIsLogin);\n      }).catch(err => alert(err));\n    };\n\n    this.logout = () => {\n      window.location.href = \"/login\";\n      const action = {\n        type: ActionType.getFollowedVacations,\n        payload: []\n      };\n      store.dispatch(action);\n      const actionUser = {\n        type: ActionType.getUser,\n        payload: new UserModel()\n      };\n      store.dispatch(actionUser);\n      const actionIsLogin = {\n        type: ActionType.updateIsLogin,\n        payload: false\n      };\n      store.dispatch(actionIsLogin);\n      localStorage.removeItem(\"token\");\n    };\n\n    this.state = {\n      user: store.getState().user,\n      isLogin: store.getState().isLogin\n    };\n    this.unsubscribeStore = store.subscribe(() => {\n      this.setState({\n        user: store.getState().user\n      });\n      this.setState({\n        isLogin: store.getState().isLogin\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"navbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(AppBar, {\n      position: \"fixed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      sm: 10,\n      md: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"navlinks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/\",\n      exact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Home\"), React.createElement(NavLink, {\n      to: \"/about\",\n      exact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"About\"), React.createElement(NavLink, {\n      to: \"/register\",\n      exact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"register\"), React.createElement(NavLink, {\n      to: \"/login\",\n      exact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"login\"))), this.state.user.isAdmin === 1 && this.state.isLogin === true ? React.createElement(\"div\", {\n      className: \"welcome-admin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Welcome \", this.state.user.firstName, \" !\")), React.createElement(\"div\", {\n      className: \"buttonAdmin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"default\",\n      onClick: event => window.location.href = '/admin-panel',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Admin\"))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"welcome-newuser\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Welcome \", this.state.user.firstName, \" !\")))), this.state.isLogin === true ? React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      sm: 1,\n      md: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"logout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"logoutButton\",\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: this.logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Logout\"))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }))), React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ofekg/OneDrive/שולחן העבודה/Project-3/frontend/src/components/header/header.tsx"],"names":["React","Component","AppBar","Toolbar","Grid","NavLink","UserModel","store","ActionType","Button","Header","constructor","props","unsubscribeStore","componentWillUnmount","componentDidMount","getState","user","userID","undefined","checkLogIn","options","method","headers","localStorage","getItem","fetch","then","response","json","res","name","actionIsLogin","type","updateIsLogin","payload","dispatch","actionUser","getUser","catch","err","alert","logout","window","location","href","action","getFollowedVacations","removeItem","state","isLogin","subscribe","setState","render","isAdmin","firstName","event"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './header.css';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { UserModel } from '../../models/user-model';\r\n\r\n//redux\r\nimport { store } from \"../../redux/store\";\r\nimport { Action } from \"../../redux/action\";\r\nimport { ActionType } from \"../../redux/action-type\";\r\nimport { Unsubscribe } from \"redux\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\ninterface HeaderState {\r\n    user: UserModel;\r\n    isLogin: boolean;\r\n}\r\n\r\nexport class Header extends Component<any, HeaderState> {\r\n\r\n    private unsubscribeStore: Unsubscribe;\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            user: store.getState().user,\r\n            isLogin: store.getState().isLogin\r\n        }\r\n        this.unsubscribeStore = store.subscribe(() => {\r\n            this.setState({ user: store.getState().user });\r\n            this.setState({ isLogin: store.getState().isLogin });\r\n        });\r\n    }\r\n\r\n    public componentWillUnmount = () => {\r\n        this.unsubscribeStore();\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if (store.getState().user.userID === undefined) {\r\n            this.checkLogIn();\r\n        }\r\n    }\r\n    private checkLogIn = () => {\r\n        const options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem('token')\r\n            }\r\n        };\r\n        // check JWT token\r\n        fetch(\"http://localhost:3001/api/login/login-check\", options)\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res.name === 'JsonWebTokenError') {\r\n                    const actionIsLogin: Action = {\r\n                        type: ActionType.updateIsLogin,\r\n                        payload: false\r\n                    };\r\n                    store.dispatch(actionIsLogin);\r\n                    return;\r\n                }\r\n                const actionUser: Action = {\r\n                    type: ActionType.getUser,\r\n                    payload: res.user\r\n                };\r\n                store.dispatch(actionUser);\r\n\r\n                const actionIsLogin: Action = {\r\n                    type: ActionType.updateIsLogin,\r\n                    payload: true\r\n                };\r\n                store.dispatch(actionIsLogin);\r\n            })\r\n            .catch(err => alert(err));\r\n    }\r\n    private logout = () => {\r\n        window.location.href=\"/login\"\r\n        const action: Action = {\r\n            type: ActionType.getFollowedVacations,\r\n            payload: []\r\n        };\r\n        store.dispatch(action);\r\n\r\n        const actionUser: Action = {\r\n            type: ActionType.getUser,\r\n            payload: new UserModel()\r\n        };\r\n        store.dispatch(actionUser);\r\n\r\n        const actionIsLogin: Action = {\r\n            type: ActionType.updateIsLogin,\r\n            payload: false\r\n        };\r\n        store.dispatch(actionIsLogin);\r\n        localStorage.removeItem(\"token\");\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div className='header'>\r\n                <div className='navbar'>\r\n                    <AppBar position=\"fixed\">\r\n                        \r\n                            <Grid container spacing={0}>\r\n                                <Grid item xs={10} sm={10}  md={3}>\r\n                                    <div className='navlinks'>\r\n                                        <NavLink to='/' exact>Home</NavLink>\r\n                                        <NavLink to='/about' exact>About</NavLink>\r\n                                        <NavLink to='/register' exact>register</NavLink>\r\n                                        <NavLink to='/login' exact>login</NavLink>\r\n                                    </div>\r\n                                </Grid>\r\n                              \r\n                        {this.state.user.isAdmin===1&&this.state.isLogin===true?\r\n                            \r\n                            \r\n                            <div className=\"welcome-admin\">\r\n                               <Grid item xs={12} sm={12} md={12}>\r\n                             <p>Welcome {this.state.user.firstName} !</p> \r\n                             </Grid>\r\n                             <div className=\"buttonAdmin\">  \r\n                                <Button   variant=\"contained\" color=\"default\" onClick={event =>  window.location.href='/admin-panel'}>Admin</Button>\r\n                             </div>\r\n                            </div>\r\n                            :\r\n                            <div >\r\n                             <div className=\"welcome-newuser\">\r\n                             <Grid item xs={12} md={12}>\r\n                                <p>Welcome {this.state.user.firstName} !</p>\r\n                              </Grid>\r\n                             </div>\r\n                            </div>\r\n                            }\r\n\r\n                        {this.state.isLogin===true?\r\n\r\n                                <Grid item xs={4} sm={1} md={1}>\r\n                         <div className=\"logout\">\r\n                                <Button  className=\"logoutButton\" variant=\"contained\" color=\"secondary\"\r\n                                    onClick={this.logout}>Logout</Button>\r\n                         </div>\r\n                                   </Grid>\r\n                            :\r\n                            <div></div>\r\n}\r\n                                \r\n                            </Grid>\r\n                  \r\n                    </AppBar>\r\n                    <Toolbar />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}