{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ofekg\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\Project-3\\\\frontend\\\\src\\\\components\\\\home\\\\home.tsx\";\nimport React, { Component } from 'react';\nimport './home.css';\nimport { VactionBox } from '../vaction-box/vaction-box';\nimport Grid from '@material-ui/core/Grid';\n//redux\nimport { store } from \"../../redux/store\";\nimport { ActionType } from \"../../redux/action-type\";\nimport io from 'socket.io-client';\nexport class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.unsubscribeStore = void 0;\n    this.socket = io.connect(\"http://localhost:3001\");\n\n    this.componentWillUnmount = () => {\n      this.unsubscribeStore();\n    };\n\n    this.componentDidMount = () => {\n      if (store.getState().vacations.length === 0) {\n        fetch('http://localhost:3001/api/vacations').then(res => res.json()).then(vacations => {\n          const action = {\n            type: ActionType.getAllVacations,\n            payload: vacations\n          };\n          store.dispatch(action);\n        }).catch(err => alert(err));\n      }\n\n      this.socket.on(\"get-all-vacations\", vacations => {\n        const action = {\n          type: ActionType.getAllVacations,\n          payload: vacations\n        };\n        store.dispatch(action);\n      }); // state in ComponentDidMount return undefind so i set Timeout\n\n      setTimeout(() => {\n        this.checkFollowedVacations();\n        this.arrangeVacations();\n      }, 1000);\n    };\n\n    this.componentDidUpdate = (prevProps, prevState) => {\n      //if user logout update component\n      if (prevState.isLogin !== this.state.isLogin) {\n        this.componentDidMount(); // if user log in update component\n\n        if (this.state.isLogin === true) {\n          this.arrangeVacations();\n        }\n      }\n    };\n\n    this.checkFollowedVacations = () => {\n      if (this.state.isLogin === true && this.state.followedVacations.length <= 0) {\n        fetch(`http://localhost:3001/api/vacations/get-followed-vacations/${this.state.user.userID}`).then(res => res.json()).then(followedVacations => {\n          const action = {\n            type: ActionType.getFollowedVacations,\n            payload: followedVacations\n          };\n          store.dispatch(action);\n          this.arrangeVacations();\n        }).catch(err => alert(err));\n      }\n    };\n\n    this.arrangeVacations = () => {\n      const allVacations = [...this.state.vacations];\n      const followedVacations = [...this.state.followedVacations]; // if user log out set all vacations follow false \n\n      if (this.state.isLogin === false) {\n        allVacations.map(v => v.follow = false);\n      }\n\n      if (followedVacations.length !== 0) {\n        for (let i = 0; i < this.state.followedVacations.length; i++) {\n          const index = allVacations.findIndex(v => v.vacationID === followedVacations[i].vacationID);\n          const vacation = allVacations[index];\n          vacation.follow = true;\n          allVacations.splice(index, 1);\n          allVacations.unshift(vacation);\n        }\n      }\n\n      this.setState({\n        vacations: allVacations\n      });\n    };\n\n    this.fixDateFromMySQL = str => {\n      const index = str.indexOf(\"T\");\n      const newStr = str.slice(0, index);\n      return newStr;\n    };\n\n    this.state = {\n      vacations: store.getState().vacations,\n      user: store.getState().user,\n      isLogin: store.getState().isLogin,\n      followedVacations: store.getState().followedVacations,\n      msg: ''\n    };\n    this.unsubscribeStore = store.subscribe(() => {\n      this.setState({\n        user: store.getState().user\n      });\n      this.setState({\n        vacations: store.getState().vacations\n      });\n      this.setState({\n        isLogin: store.getState().isLogin\n      });\n      this.setState({\n        followedVacations: store.getState().followedVacations\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, this.state.vacations.map(v => React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 4,\n      key: v.vacationID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(VactionBox, {\n      id: v.vacationID,\n      image: v.image,\n      header: v.destination,\n      content: v.description,\n      fromDate: this.fixDateFromMySQL(v.fromDate),\n      toDate: this.fixDateFromMySQL(v.toDate),\n      price: v.price,\n      follow: v.follow,\n      update: this.arrangeVacations,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    })))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ofekg/OneDrive/שולחן העבודה/Project-3/frontend/src/components/home/home.tsx"],"names":["React","Component","VactionBox","Grid","store","ActionType","io","Home","constructor","props","unsubscribeStore","socket","connect","componentWillUnmount","componentDidMount","getState","vacations","length","fetch","then","res","json","action","type","getAllVacations","payload","dispatch","catch","err","alert","on","setTimeout","checkFollowedVacations","arrangeVacations","componentDidUpdate","prevProps","prevState","isLogin","state","followedVacations","user","userID","getFollowedVacations","allVacations","map","v","follow","i","index","findIndex","vacationID","vacation","splice","unshift","setState","fixDateFromMySQL","str","indexOf","newStr","slice","msg","subscribe","render","image","destination","description","fromDate","toDate","price"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './home.css';\r\nimport { VactionBox } from '../vaction-box/vaction-box';\r\nimport { VacationModel } from '../../models/vacation-model';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { UserModel } from '../../models/user-model';\r\n//redux\r\nimport { store } from \"../../redux/store\";\r\nimport { Action } from \"../../redux/action\";\r\nimport { ActionType } from \"../../redux/action-type\";\r\nimport { Unsubscribe } from \"redux\";\r\nimport io from 'socket.io-client';\r\n\r\ninterface HomeState {\r\n    vacations: VacationModel[];\r\n    user: UserModel;\r\n    isLogin: boolean;\r\n    followedVacations: VacationModel[];\r\n    msg: string;\r\n}\r\n\r\nexport class Home extends Component<any, HomeState> {\r\n    private unsubscribeStore: Unsubscribe;\r\n    private socket = io.connect(\"http://localhost:3001\");\r\n    public constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            vacations: store.getState().vacations,\r\n            user: store.getState().user,\r\n            isLogin: store.getState().isLogin,\r\n            followedVacations: store.getState().followedVacations,\r\n            msg: ''\r\n        };\r\n\r\n        this.unsubscribeStore = store.subscribe(() => {\r\n            this.setState({ user: store.getState().user });\r\n            this.setState({ vacations: store.getState().vacations });\r\n            this.setState({ isLogin: store.getState().isLogin });\r\n            this.setState({ followedVacations: store.getState().followedVacations });\r\n        });\r\n    }\r\n\r\n    public componentWillUnmount = () => {\r\n        this.unsubscribeStore();\r\n    }\r\n    public componentDidMount = () => {\r\n        if (store.getState().vacations.length === 0) {\r\n            fetch('http://localhost:3001/api/vacations')\r\n                .then(res => res.json())\r\n                .then(vacations => {\r\n                    const action: Action = {\r\n                        type: ActionType.getAllVacations,\r\n                        payload: vacations\r\n                    };\r\n                    store.dispatch(action);\r\n                })\r\n                .catch(err => alert(err));\r\n        }\r\n        this.socket.on(\"get-all-vacations\", (vacations: VacationModel[]) => {\r\n            const action: Action = {\r\n                type: ActionType.getAllVacations,\r\n                payload: vacations\r\n            };\r\n            store.dispatch(action);\r\n        });\r\n        // state in ComponentDidMount return undefind so i set Timeout\r\n        setTimeout(() => {\r\n            this.checkFollowedVacations();\r\n            this.arrangeVacations();\r\n        }, 1000)\r\n    }\r\n    componentDidUpdate = (prevProps: any, prevState: any) => {\r\n        //if user logout update component\r\n        if (prevState.isLogin !== this.state.isLogin) {\r\n            this.componentDidMount();\r\n            // if user log in update component\r\n            if (this.state.isLogin === true) {\r\n                this.arrangeVacations();\r\n            }\r\n        }\r\n    }\r\n\r\n    private checkFollowedVacations = () => {\r\n        if (this.state.isLogin === true && this.state.followedVacations.length <= 0) {\r\n            fetch(`http://localhost:3001/api/vacations/get-followed-vacations/${this.state.user.userID}`)\r\n                .then(res => res.json())\r\n                .then(followedVacations => {\r\n                    const action: Action = {\r\n                        type: ActionType.getFollowedVacations,\r\n                        payload: followedVacations\r\n                    };\r\n                    store.dispatch(action);\r\n                    this.arrangeVacations();\r\n                })\r\n                .catch(err => alert(err));\r\n        }\r\n    }\r\n    private arrangeVacations = () => {\r\n        const allVacations = [...this.state.vacations];\r\n        const followedVacations = [...this.state.followedVacations];\r\n        // if user log out set all vacations follow false \r\n        if (this.state.isLogin === false) {\r\n            allVacations.map(v => v.follow = false);\r\n        }\r\n        if (followedVacations.length !== 0) {\r\n            for (let i = 0; i < this.state.followedVacations.length; i++) {\r\n                const index = allVacations.findIndex((v) => v.vacationID === followedVacations[i].vacationID);\r\n                const vacation = allVacations[index];\r\n                vacation.follow = true;\r\n                allVacations.splice(index, 1);\r\n                allVacations.unshift(vacation);\r\n            }\r\n        }\r\n        this.setState({ vacations: allVacations });\r\n    }\r\n    //fix format of date that mySQL return\r\n    private fixDateFromMySQL = (str: any) => {\r\n        const index = str.indexOf(\"T\");\r\n        const newStr = str.slice(0, index);\r\n        return newStr;\r\n    }\r\n    public render(): JSX.Element {\r\n\r\n        return (\r\n            <div className='home'>\r\n                <Grid container spacing={3}>\r\n                    {this.state.vacations.map(v =>\r\n                        <Grid item xs={12} md={4} key={v.vacationID} >\r\n                            <VactionBox id={v.vacationID} image={v.image} header={v.destination} content={v.description}\r\n                                fromDate={this.fixDateFromMySQL(v.fromDate)} toDate={this.fixDateFromMySQL(v.toDate)}\r\n                                price={v.price} follow={v.follow} update={this.arrangeVacations} />\r\n                        </Grid>\r\n                    )}\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}