{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ofekg\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\Project-3\\\\frontend\\\\src\\\\components\\\\register\\\\register.tsx\";\nimport React, { Component } from 'react';\nimport './register.css';\nimport { TextField, Button } from '@material-ui/core';\nimport { UserModel } from '../../models/user-model';\nimport { store } from \"../../redux/store\";\nimport { ActionType } from \"../../redux/action-type\";\nimport { PageNotFound } from '../page-not-found/page-not-found';\nexport class RegisterPage extends Component {\n  constructor(props) {\n    super(props);\n    this.unsubscribeStore = void 0;\n\n    this.componentWillUnmount = () => {\n      this.unsubscribeStore();\n    };\n\n    this.updateFirstName = args => {\n      const input = args.target;\n      const firstName = input.value;\n      const user = { ...this.state.user\n      };\n\n      if (firstName.length < 2 || firstName.length > 30) {\n        input.id = 'error';\n        user.firstName = undefined;\n        this.setState({\n          user\n        });\n        return;\n      }\n\n      input.id = '';\n      user.firstName = firstName;\n      this.setState({\n        user\n      });\n    };\n\n    this.updateLastName = args => {\n      const input = args.target;\n      const lastName = input.value;\n      const user = { ...this.state.user\n      };\n\n      if (lastName.length < 2 || lastName.length > 30) {\n        input.id = 'error';\n        user.lastName = undefined;\n        this.setState({\n          user\n        });\n        return;\n      }\n\n      input.id = '';\n      user.lastName = lastName;\n      this.setState({\n        user\n      });\n    };\n\n    this.updateUserName = args => {\n      const input = args.target;\n      const userName = input.value;\n      const user = { ...this.state.user\n      };\n\n      if (userName.length < 2 || userName.length > 30) {\n        input.id = 'error';\n        user.userName = undefined;\n        this.setState({\n          user\n        });\n        return;\n      }\n\n      input.id = '';\n      user.userName = userName;\n      this.setState({\n        user\n      });\n    };\n\n    this.updatePassword = args => {\n      const input = args.target;\n      const password = input.value;\n      const user = { ...this.state.user\n      };\n\n      if (password.length < 4 || password.length > 30) {\n        input.id = 'error';\n        user.password = undefined;\n        this.setState({\n          user\n        });\n        return;\n      }\n\n      input.id = '';\n      user.password = password;\n      this.setState({\n        user\n      });\n    };\n\n    this.sendForm = () => {\n      // check if from valid\n      const user = this.state.user;\n\n      if (user.firstName === undefined || user.lastName === undefined || user.userName === undefined || user.password === undefined) {\n        alert('please fix the red / empty inputs !');\n        return;\n      }\n\n      const options = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify(this.state.user)\n      };\n      fetch(\"http://localhost:3001/api/register\", options).then(async response => {\n        if (!response.ok) throw new Error((await response.text()));\n        return response;\n      }).then(response => response.json()).then(user => {\n        this.props.history.push(\"/\");\n        const actionUser = {\n          type: ActionType.getUser,\n          payload: user\n        };\n        store.dispatch(actionUser);\n        const actionIsLogin = {\n          type: ActionType.updateIsLogin,\n          payload: true\n        };\n        store.dispatch(actionIsLogin);\n        this.sendJWT();\n      }).catch(err => alert(err));\n    };\n\n    this.sendJWT = () => {\n      const optionsJWT = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify(store.getState().user)\n      }; // save to JWT \n\n      fetch(\"http://localhost:3001/api/login/login-save\", optionsJWT).then(response => response.json()) // save in localstorage for auto login with unique token\n      .then(res => localStorage.setItem('token', res.token)).catch(err => alert(err));\n    };\n\n    this.state = {\n      user: new UserModel(),\n      isLogin: store.getState().isLogin\n    };\n    this.unsubscribeStore = store.subscribe(() => {\n      this.setState({\n        isLogin: store.getState().isLogin\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, this.state.isLogin === false ? React.createElement(\"form\", {\n      className: \"registerPage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Register\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"First Name :\"), React.createElement(TextField, {\n      onChange: this.updateFirstName,\n      label: \"First Name\",\n      variant: \"filled\",\n      size: \"small\",\n      helperText: \"Type between 2-30 characters\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Last Name :\"), React.createElement(TextField, {\n      onChange: this.updateLastName,\n      label: \"Last Name\",\n      variant: \"filled\",\n      size: \"small\",\n      helperText: \"Type between 2-30 characters\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"User Name :\"), React.createElement(TextField, {\n      onChange: this.updateUserName,\n      label: \"User Name\",\n      variant: \"filled\",\n      size: \"small\",\n      helperText: \"Type between 2-30 characters\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Password :\"), React.createElement(TextField, {\n      onChange: this.updatePassword,\n      label: \"Password\",\n      type: \"password\",\n      autoComplete: \"current-password\",\n      variant: \"filled\",\n      size: \"small\",\n      helperText: \"Type between 4-30 characters\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: this.sendForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Register !\")) : React.createElement(PageNotFound, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ofekg/OneDrive/שולחן העבודה/Project-3/frontend/src/components/register/register.tsx"],"names":["React","Component","TextField","Button","UserModel","store","ActionType","PageNotFound","RegisterPage","constructor","props","unsubscribeStore","componentWillUnmount","updateFirstName","args","input","target","firstName","value","user","state","length","id","undefined","setState","updateLastName","lastName","updateUserName","userName","updatePassword","password","sendForm","alert","options","method","headers","body","JSON","stringify","fetch","then","response","ok","Error","text","json","history","push","actionUser","type","getUser","payload","dispatch","actionIsLogin","updateIsLogin","sendJWT","catch","err","optionsJWT","getState","res","localStorage","setItem","token","isLogin","subscribe","render"],"mappings":"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","sourcesContent":["import React, { Component, SyntheticEvent } from 'react';\r\nimport './register.css';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { UserModel } from '../../models/user-model';\r\nimport { store } from \"../../redux/store\";\r\nimport { Action } from \"../../redux/action\";\r\nimport { ActionType } from \"../../redux/action-type\";\r\nimport { Unsubscribe } from \"redux\";\r\nimport { PageNotFound } from '../page-not-found/page-not-found';\r\n\r\n\r\ninterface RegisterState {\r\n    user: UserModel;\r\n    isLogin: boolean;\r\n}\r\n\r\nexport class RegisterPage extends Component<any, RegisterState> {\r\n    private unsubscribeStore: Unsubscribe;\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            user: new UserModel(),\r\n            isLogin: store.getState().isLogin\r\n        }\r\n        this.unsubscribeStore = store.subscribe(() => {\r\n            this.setState({ isLogin: store.getState().isLogin });\r\n        });\r\n    }\r\n\r\n    public componentWillUnmount = () => {\r\n        this.unsubscribeStore();\r\n    }\r\n    private updateFirstName = (args: SyntheticEvent) => {\r\n        const input = (args.target as HTMLSelectElement);\r\n        const firstName = input.value;\r\n        const user = { ...this.state.user };\r\n        if (firstName.length < 2 || firstName.length > 30) {\r\n            input.id = 'error';\r\n            user.firstName = undefined;\r\n            this.setState({ user });\r\n            return;\r\n        }\r\n        input.id = '';\r\n        user.firstName = firstName;\r\n        this.setState({ user });\r\n    }\r\n\r\n    private updateLastName = (args: SyntheticEvent) => {\r\n        const input = (args.target as HTMLSelectElement);\r\n        const lastName = input.value;\r\n        const user = { ...this.state.user };\r\n        if (lastName.length < 2 || lastName.length > 30) {\r\n            input.id = 'error';\r\n            user.lastName = undefined;\r\n            this.setState({ user });\r\n            return;\r\n        }\r\n        input.id = '';\r\n        user.lastName = lastName;\r\n        this.setState({ user });\r\n    }\r\n    private updateUserName = (args: SyntheticEvent) => {\r\n        const input = (args.target as HTMLSelectElement);\r\n        const userName = input.value;\r\n        const user = { ...this.state.user };\r\n        if (userName.length < 2 || userName.length > 30) {\r\n            input.id = 'error';\r\n            user.userName = undefined;\r\n            this.setState({ user });\r\n            return;\r\n        }\r\n        input.id = '';\r\n        user.userName = userName;\r\n        this.setState({ user });\r\n    }\r\n\r\n    private updatePassword = (args: SyntheticEvent) => {\r\n        const input = (args.target as HTMLSelectElement);\r\n        const password = input.value;\r\n        const user = { ...this.state.user };\r\n        if (password.length < 4 || password.length > 30) {\r\n            input.id = 'error';\r\n            user.password = undefined;\r\n            this.setState({ user });\r\n            return;\r\n        }\r\n        input.id = '';\r\n        user.password = password;\r\n        this.setState({ user });\r\n    }\r\n\r\n    private sendForm = () => {\r\n        // check if from valid\r\n        const user = this.state.user;\r\n        if (user.firstName === undefined || user.lastName === undefined || user.userName === undefined ||\r\n            user.password === undefined) {\r\n            alert('please fix the red / empty inputs !');\r\n            return;\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(this.state.user)\r\n        };\r\n\r\n        fetch(\"http://localhost:3001/api/register\", options)\r\n            .then(async response => {\r\n                if (!response.ok)\r\n                    throw new Error(await response.text());\r\n                return response;\r\n            })\r\n            .then(response => response.json())\r\n            .then(user => {\r\n                this.props.history.push(\"/\");\r\n\r\n                const actionUser: Action = {\r\n                    type: ActionType.getUser,\r\n                    payload: user\r\n                };\r\n                store.dispatch(actionUser);\r\n\r\n                const actionIsLogin: Action = {\r\n                    type: ActionType.updateIsLogin,\r\n                    payload: true\r\n                };\r\n                store.dispatch(actionIsLogin);\r\n                this.sendJWT();\r\n            })\r\n            .catch(err => alert(err));\r\n    }\r\n\r\n    private sendJWT = () => {\r\n        const optionsJWT = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(store.getState().user)\r\n        };\r\n        // save to JWT \r\n        fetch(\"http://localhost:3001/api/login/login-save\", optionsJWT)\r\n            .then(response => response.json())\r\n            // save in localstorage for auto login with unique token\r\n            .then(res => localStorage.setItem('token', res.token))\r\n            .catch(err => alert(err));\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div >\r\n            {this.state.isLogin === false ?\r\n\r\n                    <form className='registerPage'>\r\n                        <h1>Register</h1>\r\n                        <label>\r\n                            <p>First Name :</p>\r\n                            <TextField onChange={this.updateFirstName}\r\n                                label=\"First Name\"\r\n                                variant=\"filled\"\r\n                                size=\"small\"\r\n                                helperText=\"Type between 2-30 characters\"\r\n                            />\r\n                        </label>\r\n                        <label>\r\n                            <p>Last Name :</p>\r\n                            <TextField onChange={this.updateLastName}\r\n                                label=\"Last Name\"\r\n                                variant=\"filled\"\r\n                                size=\"small\"\r\n                                helperText=\"Type between 2-30 characters\"\r\n                            />\r\n                        </label>\r\n                        <label>\r\n                            <p>User Name :</p>\r\n                            <TextField onChange={this.updateUserName}\r\n                                label=\"User Name\"\r\n                                variant=\"filled\"\r\n                                size=\"small\"\r\n                                helperText=\"Type between 2-30 characters\"\r\n                            />\r\n                        </label>\r\n                        <label>\r\n                            <p>Password :</p>\r\n                            <TextField onChange={this.updatePassword}\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                variant=\"filled\"\r\n                                size=\"small\"\r\n                                helperText=\"Type between 4-30 characters\"\r\n                            />\r\n                        </label>\r\n                        <Button variant=\"contained\" color=\"secondary\" onClick={this.sendForm}>Register !</Button>\r\n                    </form>\r\n                    :\r\n                    <PageNotFound />}\r\n                    </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}